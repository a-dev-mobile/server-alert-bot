package bot

import (
	"github.com/a-dev-mobile/server-alert-bot/internal/config"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"golang.org/x/exp/slog"

)

// BotService —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
type BotService struct {
	Config *config.Config
	Logger *slog.Logger
	BotAPI *tgbotapi.BotAPI
}

// NewBotService —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä BotService
func NewBotService(cfg *config.Config, logger *slog.Logger, botAPI *tgbotapi.BotAPI) *BotService {
	return &BotService{
		Config: cfg,
		Logger: logger,
		BotAPI: botAPI,
	}
}

// SendStartupMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
func (s *BotService) SendStartupMessage() {
	startupMessage := "ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Å–∏—Å—Ç–µ–º—É."
	msg := tgbotapi.NewMessage(s.Config.TelegramChatID, startupMessage)
	msg.ParseMode = "Markdown"
	if _, err := s.BotAPI.Send(msg); err != nil {
		s.Logger.Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ:", err)
	}
}

// SendServiceDownMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
func (s *BotService) SendServiceDownMessage(service string) {
	msg := tgbotapi.NewMessage(s.Config.TelegramChatID, "‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: "+service)
	msg.ParseMode = "Markdown"
	if _, err := s.BotAPI.Send(msg); err != nil {
		s.Logger.Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞:", err)
	}
}

// SendTelegramMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram
func (s *BotService) SendTelegramMessage(bot *tgbotapi.BotAPI, message string) {
    msg := tgbotapi.NewMessage(s.Config.TelegramChatID, message)
    msg.ParseMode = "Markdown"  // Ensure Markdown parsing is enabled
    if _, err := bot.Send(msg); err != nil {
        s.Logger.Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
    }
}

// SendNoAlertsMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç—Ä–µ–≤–æ–≥
func (s *BotService) SendNoAlertsMessage(bot *tgbotapi.BotAPI) {
	msg := tgbotapi.NewMessage(s.Config.TelegramChatID, "‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ.")
	msg.ParseMode = "Markdown"
	if _, err := bot.Send(msg); err != nil {
		s.Logger.Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ç—Ä–µ–≤–æ–≥:", err)
	}
}

// SendAlertResolvedMessage –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å–µ—Ö —Ç—Ä–µ–≤–æ–≥
func (s *BotService) SendAlertResolvedMessage(bot *tgbotapi.BotAPI) {
	msg := tgbotapi.NewMessage(s.Config.TelegramChatID, "üõ†Ô∏è –í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã.")
	msg.ParseMode = "Markdown"
	if _, err := bot.Send(msg); err != nil {
		s.Logger.Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:", err)
	}
}
